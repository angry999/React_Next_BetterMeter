{"ast":null,"code":"export const formatNumber = value => new Intl.NumberFormat().format(value);\nexport const formatNumberShort = (num, digits = 0) => {\n  const units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n\n  for (let i = units.length - 1; i >= 0; i--) {\n    let decimal = Math.pow(1000, i + 1);\n\n    if (num <= -decimal || num >= decimal) {\n      return +(num / decimal).toFixed(digits) + units[i];\n    }\n  }\n\n  return num;\n};\nexport const formatFullName = (firstName, lastName) => {\n  let fullName = '';\n\n  if (firstName && lastName) {\n    fullName = firstName + ' ' + lastName;\n  } else if (firstName || lastName) {\n    fullName = firstName || lastName;\n  }\n\n  return fullName;\n};\nexport const formatMinutes = value => {\n  const minutes = Math.floor(value / 60);\n  const seconds = value % 60;\n  const secondsStr = seconds < 10 ? `${seconds}0` : seconds;\n  return `${minutes}:${secondsStr}`;\n};","map":{"version":3,"sources":["E:/WORK/2020_11/BetterMeter-Test-React-Next/utils/format.js"],"names":["formatNumber","value","Intl","NumberFormat","format","formatNumberShort","num","digits","units","i","length","decimal","Math","pow","toFixed","formatFullName","firstName","lastName","fullName","formatMinutes","minutes","floor","seconds","secondsStr"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,KAAD,IAAW,IAAIC,IAAI,CAACC,YAAT,GAAwBC,MAAxB,CAA+BH,KAA/B,CAAhC;AAEP,OAAO,MAAMI,iBAAiB,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,CAAf,KAAqB;AACpD,QAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAd;;AAEA,OAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,QAAIE,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeJ,CAAC,GAAG,CAAnB,CAAd;;AAEA,QAAIH,GAAG,IAAI,CAACK,OAAR,IAAmBL,GAAG,IAAIK,OAA9B,EAAuC;AACrC,aAAO,CAAC,CAACL,GAAG,GAAGK,OAAP,EAAgBG,OAAhB,CAAwBP,MAAxB,CAAD,GAAmCC,KAAK,CAACC,CAAD,CAA/C;AACD;AACF;;AAED,SAAOH,GAAP;AACD,CAZM;AAcP,OAAO,MAAMS,cAAc,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACrD,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAIF,SAAS,IAAIC,QAAjB,EAA2B;AACzBC,IAAAA,QAAQ,GAAGF,SAAS,GAAG,GAAZ,GAAkBC,QAA7B;AACD,GAFD,MAEO,IAAID,SAAS,IAAIC,QAAjB,EAA2B;AAChCC,IAAAA,QAAQ,GAAGF,SAAS,IAAIC,QAAxB;AACD;;AAED,SAAOC,QAAP;AACD,CAVM;AAYP,OAAO,MAAMC,aAAa,GAAIlB,KAAD,IAAW;AACtC,QAAMmB,OAAO,GAAGR,IAAI,CAACS,KAAL,CAAWpB,KAAK,GAAG,EAAnB,CAAhB;AACA,QAAMqB,OAAO,GAAGrB,KAAK,GAAG,EAAxB;AACA,QAAMsB,UAAU,GAAGD,OAAO,GAAG,EAAV,GAAgB,GAAEA,OAAQ,GAA1B,GAA+BA,OAAlD;AAEA,SAAQ,GAAEF,OAAQ,IAAGG,UAAW,EAAhC;AACD,CANM","sourcesContent":["export const formatNumber = (value) => new Intl.NumberFormat().format(value)\r\n\r\nexport const formatNumberShort = (num, digits = 0) => {\r\n  const units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\r\n\r\n  for (let i = units.length - 1; i >= 0; i--) {\r\n    let decimal = Math.pow(1000, i + 1)\r\n\r\n    if (num <= -decimal || num >= decimal) {\r\n      return +(num / decimal).toFixed(digits) + units[i]\r\n    }\r\n  }\r\n\r\n  return num\r\n}\r\n\r\nexport const formatFullName = (firstName, lastName) => {\r\n  let fullName = ''\r\n\r\n  if (firstName && lastName) {\r\n    fullName = firstName + ' ' + lastName\r\n  } else if (firstName || lastName) {\r\n    fullName = firstName || lastName\r\n  }\r\n\r\n  return fullName\r\n}\r\n\r\nexport const formatMinutes = (value) => {\r\n  const minutes = Math.floor(value / 60)\r\n  const seconds = value % 60\r\n  const secondsStr = seconds < 10 ? `${seconds}0` : seconds\r\n\r\n  return `${minutes}:${secondsStr}`\r\n}\r\n"]},"metadata":{},"sourceType":"module"}