{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\WORK\\\\2020_11\\\\BetterMeter-Test-React-Next\\\\components\\\\Select\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useCallback, useMemo, useEffect } from 'react';\nimport _ from 'lodash';\nimport styles from './styles.module.scss';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { usePopper } from 'react-popper';\nimport cn from 'classnames';\nimport { getTextWidth } from '../../utils';\nvar sameWidth = {\n  name: 'sameWidth',\n  enabled: true,\n  phase: 'beforeWrite',\n  requires: ['computeStyles'],\n  fn: function fn(_ref) {\n    var state = _ref.state;\n    state.styles.popper.width = \"\".concat(state.rects.reference.width + 35, \"px\");\n  },\n  effect: function effect(_ref2) {\n    var state = _ref2.state;\n    state.elements.popper.style.width = \"\".concat(state.elements.reference.offsetWidth + 35, \"px\");\n  }\n};\n\nvar DropdownMenu = function DropdownMenu(_ref3) {\n  _s();\n\n  var _cn;\n\n  var options = _ref3.options,\n      value = _ref3.value,\n      label = _ref3.label,\n      onChange = _ref3.onChange,\n      theme = _ref3.theme,\n      className = _ref3.className,\n      full = _ref3.full,\n      OptionComponent = _ref3.optionComponent,\n      handleClassName = _ref3.handleClassName;\n\n  var _useState = useState(),\n      valueWidth = _useState[0],\n      setValueWidth = _useState[1];\n\n  var _useState2 = useState(false),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      referenceElement = _useState3[0],\n      setReferenceElement = _useState3[1];\n\n  var _useState4 = useState(null),\n      popperElement = _useState4[0],\n      setPopperElement = _useState4[1];\n\n  var _usePopper = usePopper(referenceElement, popperElement, {\n    placement: 'bottom-start',\n    modifiers: [{\n      name: 'flip',\n      options: {\n        fallbackPlacements: ['bottom-start']\n      }\n    }, {\n      name: 'offset',\n      options: {\n        offset: [-20, -46]\n      }\n    }, {\n      name: 'preventOverflow',\n      options: {\n        // padding from browser edges\n        padding: 16\n      }\n    }, sameWidth]\n  }),\n      popperStyles = _usePopper.styles,\n      attributes = _usePopper.attributes;\n\n  var close = useCallback(function () {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  var toggle = useCallback(function () {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  var changeValue = useCallback(function (option) {\n    return function () {\n      close();\n      onChange && onChange(option.value);\n    };\n  }, [close]);\n  var withColor = useMemo(function () {\n    return _.some(options, function (option) {\n      return option.color;\n    });\n  });\n  var valueLabel = useMemo(function () {\n    return _.get(_.find(options, {\n      value: value\n    }), 'label');\n  }, [options, value]);\n  useEffect(function () {\n    var width = 'auto';\n\n    if (full) {\n      var optionWidths = options.map(function (option) {\n        return getTextWidth(option.label, \"500 16px 'DM Sans', Arial, Helvetica, sans-serif\");\n      });\n      width = _.max(optionWidths);\n    }\n\n    setValueWidth(width);\n  }, [setValueWidth, options, full]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(styles.select, (_cn = {}, _defineProperty(_cn, styles[theme], !!theme), _defineProperty(_cn, styles.open, isOpen), _defineProperty(_cn, styles.full, full), _cn), className),\n    children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: close,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggle,\n        role: \"button\",\n        tabIndex: 0,\n        className: cn(styles.handle, handleClassName),\n        ref: setReferenceElement,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.label,\n          children: [label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this), !!valueLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.valueWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.value,\n            style: {\n              width: valueWidth\n            },\n            children: withColor ? '' : valueLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n        className: styles.popover,\n        ref: setPopperElement,\n        style: popperStyles.popper\n      }, attributes.popper), {}, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.list,\n          children: options.map(function (option) {\n            var _cn2;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: changeValue(option),\n              role: \"button\",\n              tabIndex: 0,\n              className: cn(styles.option, (_cn2 = {}, _defineProperty(_cn2, styles.selected, option.value === value), _defineProperty(_cn2, styles.withColor, withColor), _cn2)),\n              children: OptionComponent ? /*#__PURE__*/_jsxDEV(OptionComponent, {\n                option: option,\n                value: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, _this) : option.label\n            }, option.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DropdownMenu, \"m9ZqEtg4BcUNYLJeBzdomnpbsxw=\", false, function () {\n  return [usePopper];\n});\n\n_c = DropdownMenu;\nexport default DropdownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"sources":["E:/WORK/2020_11/BetterMeter-Test-React-Next/components/Select/index.jsx"],"names":["useState","useCallback","useMemo","useEffect","_","styles","OutsideClickHandler","usePopper","cn","getTextWidth","sameWidth","name","enabled","phase","requires","fn","state","popper","width","rects","reference","effect","elements","style","offsetWidth","DropdownMenu","options","value","label","onChange","theme","className","full","OptionComponent","optionComponent","handleClassName","valueWidth","setValueWidth","isOpen","setIsOpen","referenceElement","setReferenceElement","popperElement","setPopperElement","placement","modifiers","fallbackPlacements","offset","padding","popperStyles","attributes","close","toggle","changeValue","option","withColor","some","color","valueLabel","get","find","optionWidths","map","max","select","open","handle","valueWrapper","popover","list","selected"],"mappings":"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","sourcesContent":["import { useState, useCallback, useMemo, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport styles from './styles.module.scss'\r\nimport OutsideClickHandler from 'react-outside-click-handler'\r\nimport { usePopper } from 'react-popper'\r\nimport cn from 'classnames'\r\nimport { getTextWidth } from '../../utils'\r\n\r\nconst sameWidth = {\r\n  name: 'sameWidth',\r\n  enabled: true,\r\n  phase: 'beforeWrite',\r\n  requires: ['computeStyles'],\r\n  fn: ({ state }) => {\r\n    state.styles.popper.width = `${state.rects.reference.width + 35}px`\r\n  },\r\n  effect: ({ state }) => {\r\n    state.elements.popper.style.width = `${state.elements.reference.offsetWidth + 35}px`\r\n  },\r\n}\r\n\r\nconst DropdownMenu = ({\r\n  options,\r\n  value,\r\n  label,\r\n  onChange,\r\n  theme,\r\n  className,\r\n  full,\r\n  optionComponent: OptionComponent,\r\n  handleClassName,\r\n}) => {\r\n  const [valueWidth, setValueWidth] = useState()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [referenceElement, setReferenceElement] = useState(null)\r\n  const [popperElement, setPopperElement] = useState(null)\r\n  const { styles: popperStyles, attributes } = usePopper(\r\n    referenceElement,\r\n    popperElement,\r\n    {\r\n      placement: 'bottom-start',\r\n      modifiers: [\r\n        {\r\n          name: 'flip',\r\n          options: {\r\n            fallbackPlacements: ['bottom-start'],\r\n          },\r\n        },\r\n        {\r\n          name: 'offset',\r\n          options: {\r\n            offset: [-20, -46],\r\n          },\r\n        },\r\n        {\r\n          name: 'preventOverflow',\r\n          options: {\r\n            // padding from browser edges\r\n            padding: 16,\r\n          },\r\n        },\r\n        sameWidth,\r\n      ],\r\n    }\r\n  )\r\n\r\n  const close = useCallback(() => {\r\n    setIsOpen(false)\r\n  }, [setIsOpen])\r\n\r\n  const toggle = useCallback(() => {\r\n    setIsOpen(!isOpen)\r\n  }, [isOpen, setIsOpen])\r\n\r\n  const changeValue = useCallback(\r\n    (option) => () => {\r\n      close()\r\n      onChange && onChange(option.value)\r\n    },\r\n    [close]\r\n  )\r\n\r\n  const withColor = useMemo(() => _.some(options, (option) => option.color))\r\n\r\n  const valueLabel = useMemo(() => {\r\n    return _.get(_.find(options, { value }), 'label')\r\n  }, [options, value])\r\n\r\n  useEffect(() => {\r\n    let width = 'auto'\r\n\r\n    if (full) {\r\n      const optionWidths = options.map((option) =>\r\n        getTextWidth(\r\n          option.label,\r\n          \"500 16px 'DM Sans', Arial, Helvetica, sans-serif\"\r\n        )\r\n      )\r\n\r\n      width = _.max(optionWidths)\r\n    }\r\n\r\n    setValueWidth(width)\r\n  }, [setValueWidth, options, full])\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        styles.select,\r\n        {\r\n          [styles[theme]]: !!theme,\r\n          [styles.open]: isOpen,\r\n          [styles.full]: full,\r\n        },\r\n        className\r\n      )}\r\n    >\r\n      <OutsideClickHandler onOutsideClick={close}>\r\n        <div\r\n          onClick={toggle}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          className={cn(styles.handle, handleClassName)}\r\n          ref={setReferenceElement}\r\n        >\r\n          <div className={styles.label}>{label}:</div>\r\n          {!!valueLabel && (\r\n            <div className={styles.valueWrapper}>\r\n              <div className={styles.value} style={{ width: valueWidth }}>\r\n                {withColor ? '' : valueLabel}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {isOpen && (\r\n          <div\r\n            className={styles.popover}\r\n            ref={setPopperElement}\r\n            style={popperStyles.popper}\r\n            {...attributes.popper}\r\n          >\r\n            <div className={styles.list}>\r\n              {options.map((option) => (\r\n                <div\r\n                  key={option.label}\r\n                  onClick={changeValue(option)}\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                  className={cn(styles.option, {\r\n                    [styles.selected]: option.value === value,\r\n                    [styles.withColor]: withColor,\r\n                  })}\r\n                >\r\n                  {OptionComponent ? (\r\n                    <OptionComponent option={option} value={value} />\r\n                  ) : (\r\n                    option.label\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </OutsideClickHandler>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownMenu\r\n"]},"metadata":{},"sourceType":"module"}